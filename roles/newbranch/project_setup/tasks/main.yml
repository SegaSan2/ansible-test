---
- name: Copy Parameters
  copy:
    src: '{{item.src}}'
    dest: '{{item.dest}}'

    remote_src: yes
  with_items:
    - { src: '/var/www/{{ page_for_nginx }}/app/config/parameters.yml.dist', dest: '/var/www/{{ page_for_nginx }}/app/config/parameters.yml'}
    - { src: '/var/www/{{ page_for_nginx }}/app/config/clients/maxibooking.env.dist' , dest: '/var/www/{{ page_for_nginx }}/app/config/clients/maxibooking.env'}
    - { src: '/var/www/{{ page_for_nginx }}/app/config/database.env.dist' , dest: '/var/www/{{ page_for_nginx }}/app/config/database.env'}
    - { src:  '/var/www/{{ page_for_nginx }}/app/config/secrets.yml.dist', dest: '/var/www/{{ page_for_nginx }}/app/config/secrets.yml' }
    - { src:  '/var/www/{{ page_for_nginx }}/app/config/version.yml.dist', dest: '/var/www/{{ page_for_nginx }}/app/config/version.yml' }
#  become: yes

- name: Composer install
  composer:
    command: install
    working_dir: '/var/www/{{ page_for_nginx }}'
    optimize_autoloader: true
    global_command: false
    no_dev: false

- name: Bower Install
  bower:
    path: '/var/www/{{ page_for_nginx }}'

- name: Load Fixtures
  shell: 'php console {{item}}'
  args:
    chdir: '/var/www/{{page_for_nginx}}/bin'
  with_items:
    - 'assets:install --symlink'
    - 'fos:js-routing:dump --env=prod'
    - 'bazinga:js-translation:dump'
    - 'assetic:dump --env=prod'
#    - 'mbh:base:fixtures'
    - 'fos:js-routing:dump --env=dev'
    - 'assetic:dump --env=dev'
  when: load_fixtures

- name: Change parameters.yml
  template:
    src: ../templates/parameters_yml.j2
    dest: /var/www/{{ page_for_nginx }}/app/config/parameters.yml
    owner: nginx
    group: nginx
    mode: 0664
    backup: yes
  become: yes

- name: Replace secrets.yml
  template:
    src: ../templates/secrets_yml.j2
    dest: /var/www/{{ page_for_nginx }}/app/config/secrets.yml
    owner: nginx
    group: nginx
    mode: 0664
    backup: yes
  become: yes

- name: Replace database.env
  template:
    src: ../templates/database_env.j2
    dest: /var/www/{{ page_for_nginx }}/app/config/database.env
    owner: nginx
    group: nginx
    mode: 0664
    backup: yes
  become: yes

- name: Replace "{{mongo_new_base}}".env
  template:
    src: ../templates/database_env.j2
    dest: /var/www/{{ page_for_nginx }}/app/config/database.env
    owner: nginx
    group: nginx
    mode: 0664
    backup: yes
  become: yes

- name: Replace file for connect database
  template:
    src: ../templates/maxibooking_env.j2
    dest: /var/www/{{ page_for_nginx }}/app/config/clients/maxibooking.env
    owner: nginx
    group: nginx
    mode: 0664
    backup: yes
  become: yes

- name: Cache Clear
  shell: 'php console {{item}}'
  args:
    chdir: '/var/www/{{page_for_nginx}}/bin'
  with_items:
    - 'cache:clear --no-warmup --env=prod'
    - 'cache:clear --no-warmup --env=dev'
  become: yes

- name: restart nginx
  service:
    name: nginx
    state: restarted
  become: yes
